@model AnalistaQualidadeTeste.Models.Painel

@{
    ViewBag.Title = "Edit" + Model.Titulo;
}

<h2>Detalhes da Tarefa @Model.Id</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4> @Model.Titulo</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tipo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Prioridade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Prioridade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Prioridade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Responsavel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Responsavel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Responsavel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NovaObservacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.NovaObservacao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NovaObservacao, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Titulo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Titulo)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Tipo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Tipo)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Prioridade)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Prioridade)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DataAbertura)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DataAbertura)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Responsavel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Responsavel)
        </dd>

    </dl>
</div>
<hr />
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Salvar" class="btn btn-success" />
        @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })

    </div>
</div>
<hr />
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
